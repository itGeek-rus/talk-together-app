
services:
  #PostgreSQL
  postgres:
    image: postgres:13
    container_name: talk-together-db
    labels:
      - "com.docker.compose.project=talk-together-app"
    environment:
      POSTGRES_DB: ${DB_NAME:-talk-together-db}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  #Redis
  redis:
    image: redis:alpine
    container_name: talk-together-redis
    labels:
      - "com.docker.compose.project=talk-together-app"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  #Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper-talk
    labels:
      - "com.docker.compose.project=talk-together-app"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    restart: unless-stopped

  #Kafka
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka-talk
    labels:
      - "com.docker.compose.project=talk-together-app"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
    restart: unless-stopped

  #App
  app:
    build: .
    container_name: talk-together-app
    labels:
      - "com.docker.compose.project=talk-together-app"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_NAME=${DB_NAME:-talk-together-db}
      - REDIS_ADDR=redis:6379
      - KAFKA_BROKERS=kafka:9092
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - kafka
    volumes:
      - .:/app
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: